# -*- mode: qore; indent-tabs-mode: nil -*-

# service: issue-3219-c
# serviceversion: 1.0
# class-name: Issue3219
# parse-options: PO_NEW_STYLE, PO_REQUIRE_TYPES, PO_STRICT_ARGS
# serviceauthor: Qore Technologies, s.r.o.
# servicedesc: test service
# autostart: false
# remote: false
# define-group: test: test interfaces
# define-group: regression: regression test group
# groups: test, regression
# ENDSERVICE

class CRestClass inherits AbstractRestClass {
    constructor() : AbstractRestClass() {}

    string name() {
        return "c";
    }

    hash get(hash cx, *hash ah) {
        UserApi::logInfo("C:  cx: %N\nah: %N", cx, ah);
        return RestHandler::makeResponse(200, "issue-3219-c");
    }
}

class Issue3219CRestHandler inherits AbstractServiceRestHandler {
    constructor() : AbstractServiceRestHandler("/issue-3219-c", False, new PermissiveAuthenticator()) {
        addClass(new CRestClass());
        addListener(ServiceApi::getConfigItemValue("issue-3219-port"));
    }

    removeRootPath(reference<string> path) {
        path =~ s/^\/*issue-3219-c//;
    }
}

class Issue3219 inherits QorusService {
    # desc: init
    # name: init
    init() {
        Issue3219CRestHandler rh();
        bindHttp(rh, <HttpBindOptionInfo>{"allow_listener_sharing": False});
    }

    private *hash<string, hash<ConfigItemInfo>> getConfigItemsImpl() {
        return {
            "issue-3219-port": <ConfigItemInfo>{
                "type": "int",
                "description": "port # to use",
            },
        };
    }
}
