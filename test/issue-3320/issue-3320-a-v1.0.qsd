# -*- mode: qore; indent-tabs-mode: nil -*-

# service: issue-3320-a
# serviceversion: 1.0
# class-name: Issue3320
# parse-options: PO_NEW_STYLE, PO_REQUIRE_TYPES, PO_STRICT_ARGS
# serviceauthor: Qore Technologies, s.r.o.
# servicedesc: test service
# autostart: false
# remote: false
# define-group: test: test interfaces
# define-group: regression: regression test group
# groups: test, regression
# ENDSERVICE

const WSDL = '<?xml version="1.0" encoding="UTF-8"?>
<definitions xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://www.ecerami.com/wsdl/HelloService.wsdl" xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="HelloService" targetNamespace="http://www.ecerami.com/wsdl/HelloService.wsdl">
    <message name="SayHelloRequest">
        <part name="firstName" type="xsd:string" />
    </message>
    <message name="SayHelloResponse">
        <part name="greeting" type="xsd:string" />
    </message>
    <portType name="Hello_PortType">
        <operation name="sayHello">
            <input message="tns:SayHelloRequest" />
            <output message="tns:SayHelloResponse" />
        </operation>
    </portType>
    <binding name="Hello_Binding" type="tns:Hello_PortType">
        <soap:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http" />
        <operation name="sayHello">
            <soap:operation soapAction="sayHello" />
            <input>
                <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="urn:examples:helloservice" use="encoded" />
            </input>
            <output>
                <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="urn:examples:helloservice" use="encoded" />
            </output>
        </operation>
    </binding>
    <service name="Hello_Service">
        <documentation>WSDL File for HelloService</documentation>
        <port binding="tns:Hello_Binding" name="Hello_Port">
            <soap:address location="http://localhost:8080/soap/servlet/rpcrouter" />
        </port>
    </service>
</definitions>';

class Issue3320 inherits QorusService {
    # desc: init
    # name: init
    init() {
        bool allowSoapSharing = ServiceApi::getConfigItemValue("issue-3320-soap-listener-allow-sharing");

        ServiceApi::registerSoapListeners(
            ({ "wsdl": WSDL },),
            ServiceApi::getConfigItemValue("issue-3320-port"),
            NOTHING,
            NOTHING,
            new PermissiveAuthenticator(),
            <HttpBindOptionInfo>{"allow_listener_sharing": allowSoapSharing}
        );
    }

    private *hash<string, hash<ConfigItemInfo>> getConfigItemsImpl() {
        return {
            "issue-3320-port": <ConfigItemInfo>{
                "type": "int",
                "description": "port # to use",
            },
            "issue-3320-soap-listener-allow-sharing": <ConfigItemInfo>{
                "type": "bool",
                "description": "whether soap listener sharing should be allowed"
            },
        };
    }
}
