#!/usr/bin/env qore
# -*- mode: qore; indent-tabs-mode: nil -*-

%new-style
%strict-args
%require-types
%enable-all-warnings

%requires QUnit

%append-include-path .
%include ../lib/qorus-client.ql

%exec-class CronTimerTest

# all tests assume Europe/Prague TZ locale
%set-time-zone Europe/Prague

class CronTimerTest inherits Test {
    constructor(): Test("CronTimer", "1.0", \ARGV, Opts) {
        addTestCase("mainTest", \mainTest());
        set_return_value(main());
    }

    private mainTest() {
        # test DST transitions
        {
            CronTrigger trigger("1", "*/2", "*", "*", "*");

            date testdate = 2020-03-29T01:02:00;
            date next = trigger.findNext(testdate);
            assertEq(2020-03-29T04:01:00, next);
        }

        {
            CronTrigger trigger("1", "*/2", "*", "*", "*");

            date testdate = 2020-01-01T01:02:00;
            date next = trigger.findNext(testdate);
            assertEq(2020-01-01T02:01:00, next);
        }

        {
            CronTrigger trigger("1", "*/2", "*", "*", "*");

            date testdate = 2020-01-01T00:59:00;
            date next = trigger.findNext(testdate);
            assertEq(2020-01-01T02:01:00, next);
        }

        {
            CronTrigger trigger("1", "*/2", "*", "*", "*");

            date testdate = 2020-03-29T02:02:00;
            date next = trigger.findNext(testdate);
            assertEq(2020-03-29T04:01:00, next);
        }

        {
            CronTrigger trigger("0", "*", "*", "*", "*");

            date testdate = 2019-10-27T01:02:00;
            date next = trigger.findNext(testdate);
            assertEq(2019-10-27T02:00:00, next);
        }

        {
            CronTrigger trigger("0", "*", "*", "*", "*");

            date testdate = 2019-10-27T00:01:00;
            date next = trigger.findNext(testdate);
            assertEq(2019-10-27T01:00:00, next);
        }

        {
            CronTrigger trigger("0", "*", "*", "*", "*");

            date testdate = 2019-10-27T01:00:00;
            date next = trigger.findNext(testdate);
            assertEq(2019-10-27T01:00:00, next);
        }

        {
            CronTrigger trigger("0", "*", "*", "*", "*");

            date testdate = 2019-10-27T00:59:59;
            date next = trigger.findNext(testdate);
            assertEq(2019-10-27T01:00:00, next);
        }

        # non-DST tests
        {
            CronTrigger trigger("0", "2", "*", "*", "*");

            date testdate = 2020-01-01T01:02:00;
            date next = trigger.findNext(testdate);
            assertEq(2020-01-01T02:00:00, next);
        }

        {
            CronTrigger trigger("0", "2", "*", "*", "*");

            date testdate = 2020-01-01T00:59:00;
            date next = trigger.findNext(testdate);
            assertEq(2020-01-01T02:00:00, next);
        }

        {
            CronTrigger trigger("0", "2", "*", "*", "*");

            date testdate = 2020-02-29T02:02:00;
            date next = trigger.findNext(testdate);
            assertEq(2020-03-01T02:00:00, next);
        }

        {
            CronTrigger trigger("0", "*", "*", "*", "*");

            date testdate = 2020-04-30T23:59:59;
            date next = trigger.findNext(testdate);
            assertEq(2020-05-01T00:00:00, next);
        }
    }
}
