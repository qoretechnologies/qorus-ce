swagger: "2.0"
info:
  description: "This is a demo API for creating a billing account"
  version: "1.0.0"
  title: "Billing API Demo"
  contact:
    email: "info@qoretechnologies.com"
host: "localhost"
basePath: "/billing-demo"
tags:
- name: "accounts"
  description: "Everything about billing accounts"
schemes:
- "https"
- "http"
paths:
  /accounts:
    post:
      tags:
      - "accounts"
      summary: "Create a new account"
      description: ""
      operationId: "createAccount"
      consumes:
      - "text/x-yaml"
      - "application/json"
      produces:
      - "text/x-yaml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Account object to be created in the billing system"
        required: true
        schema:
          $ref: "#/definitions/Account"
      responses:
        200:
          description: "successful operation"
          schema:
            type: object
            properties:
              Id:
                type: "integer"
                format: "int64"
        405:
          description: "Invalid input"
        500:
          description: "server error"
          schema:
            type: string
    get:
      tags:
      - "accounts"
      summary: "Find an account from the RequestId"
      description: ""
      operationId: "findAccount"
      produces:
      - "text/x-yaml"
      - "application/json"
      parameters:
      - in: "query"
        name: "RequestId"
        type: "string"
        description: "RequestId for looking up the billing account"
        required: true
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Account"
        404:
          description: "no such ID found"
          schema:
            type: string
  /accounts/{accountId}:
    get:
      tags:
      - "accounts"
      summary: "Find account by ID"
      description: "Returns a single account"
      operationId: "getAccountById"
      produces:
      - "text/x-yaml"
      - "application/json"
      parameters:
      - name: "accountId"
        in: "path"
        description: "ID of account to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Account"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Account not found"
    put:
      tags:
      - "accounts"
      summary: "Updates an account"
      description: ""
      operationId: "updateAccount"
      consumes:
      - "text/x-yaml"
      - "application/json"
      produces:
      - "text/x-yaml"
      - "application/json"
      parameters:
      - name: "accountId"
        in: "path"
        description: "ID of account to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        405:
          description: "Invalid input"
    delete:
      tags:
      - "accounts"
      summary: "Deletes an account"
      description: ""
      operationId: "deleteAccount"
      produces:
      - "text/x-yaml"
      - "application/json"
      parameters:
      - name: "accountId"
        in: "path"
        description: "Account id to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Pet not found"
definitions:
  PaymentInfo:
    type: "object"
    properties:
      Type:
        type: "string"
      Id:
        type: "string"
      Expiration:
        type: "string"
      CVV2:
        type: "string"
      Name:
        type: "string"
      Address:
        type: "string"
  Account:
    type: "object"
    required:
    - "Name"
    - "Type"
    - "TaxId"
    - "RequestId"
    properties:
      Id:
        type: "integer"
        format: "int64"
      Name:
        type: "string"
      Type:
        type: "string"
      TaxId:
        type: "string"
      RequestId:
        type: "string"
      PaymentInfo:
        $ref: "#/definitions/PaymentInfo"
      BillCycle:
        type: "string"
