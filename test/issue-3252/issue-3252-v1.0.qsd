# -*- mode: qore; indent-tabs-mode: nil -*-

# service: issue-3252
# serviceversion: 1.0
# class-name: Issue3252
# parse-options: PO_NEW_STYLE, PO_REQUIRE_TYPES, PO_STRICT_ARGS
# serviceauthor: Qore Technologies, s.r.o.
# servicedesc: test service for issue #3252
# remote: false
# autostart: false
# ENDSERVICE

class Issue3252RestHandler inherits AbstractServiceRestHandler {
    public {
        const TestCert = "-----BEGIN PRIVATE KEY-----
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
zSztmkhOqkFEEHMJQbzbGKJu/Dxn8yQ=
-----END PRIVATE KEY-----
-----BEGIN CERTIFICATE-----
MIIFCTCCAvGgAwIBAgIUMs1NHrp1izFaP/+y2PQ+AZzGjQkwDQYJKoZIhvcNAQEM
BQAwFDESMBAGA1UEAwwJbG9jYWxob3N0MB4XDTE5MDkxOTEyNTQwOVoXDTIwMDkx
ODEyNTQwOVowFDESMBAGA1UEAwwJbG9jYWxob3N0MIICIjANBgkqhkiG9w0BAQEF
AAOCAg8AMIICCgKCAgEAoccyIR1+tQI9Xaa0nIiqIGXX5kQc/SyObAy1ongcsHxl
Xy4Lzi4czj99YL4kVEWXIZAEmaNN1DAJRqFO1uM1eheIvEQPJioOXKjXjjXsJso7
uu/lCWIqi5tEtOAEg8/Df1ReHGz3EIFaFLkK2UCeYPVk28onbWm67cxCA9qUWy3q
fwkRFgFRECR0j1zRTHc1/bUvmAbR1kMGdYvksfwmnzzsc2OfDPakmRAO9aR7bow/
BxWbV+u5B/M04vES7vCWEtscKLuX7sa2rHp1T4J6ADUeZLmCr86wcFTnurzPRnmv
O2yx94eOhIc6o5DBu4CAXFW7lSvlozwLlLb76pDE/o3kW2IMg1Uuah/mPuYGWNg1
L73DXvl131T0Xh5LR/7PDIgzTuR9iQjV2UUUHWfTXj4VL7NLhR1yjciMUyrHAXHU
UUV8gslmruA6AJLpltVEIogfEflaAWL1TdMJolJs/zZApPf0olJ6Yggdyz6iSg8+
YOsvpPfPDhi9B/NRMWQk/6tnya/taMdoojNnnBef74+ymI4bSKvGhRrT3ip5CnCm
PB5EwLNRBzIvhj30r2XHjABEf+R0AcwDxA0R/ET/s4+5F1ZlwR4Fjf6mxUUl1GKY
OoSljuslbQl0+mWn9DctAwi1u46Qkla4FnxCr2WpKwbEwkcLsxZ6Ww4OlHluGoMC
AwEAAaNTMFEwHQYDVR0OBBYEFMaQGsgijj+JvaxH2lAtDSHdlBwKMB8GA1UdIwQY
MBaAFMaQGsgijj+JvaxH2lAtDSHdlBwKMA8GA1UdEwEB/wQFMAMBAf8wDQYJKoZI
hvcNAQEMBQADggIBAJLEiNaQIW7HxGnTY6l57CSBsGLGgxniKgnqRoSj9lcbJk3b
bCTcsV7OrJvZOLuZB/X0lSA/JWC771ROn90rop2yHbB6xgZ1geqKt2SS7QnEAEzu
SEKNJvIHQVrq+VAhsoL4lfOqU0VOB9wopTzw09BMaaVMArnlDBmHxUqio7XQx+1K
slt2qveMRs81Ug5SPJAHS3zD7WcutPXiA8xIJ5OFCFa9ZPdcRLznHdOkSD4Hk7kQ
cipffDoymZWp0++St5u71q1vO8Llyrj9R1pBRQhKWsf/4B7IZWoZGKGxlCyOi/pM
ooMeCuUZAI/V2z4WzJx1TLNNaZOr84hlsVHezpCZyBCMID+LmnIsFtIfj8C1eBuB
wxQ7ZjJzzGTAN0vYjKq5HzqemnmQiI+bGAfqMG1Ugl4JAOQZQPxb0pcLUpQUlMCh
X2z8+9HUjcmTPu2wU/WGtienawHqBaza/BRp3fOany+tUnZ9UIFrajhLvWN9S+gZ
vc1/bU8hBB5JCehGXEzDV1zWFY7ubRE9rWYfEE9ciMVUuuDrfuUq5hCaii6j0D2o
CmORY1LNT/7f2tXX8rHeWWFd8hIceZwBsbRpZwtJw5keiJ3/Xrzg39ohxLOsdGyy
b0v00yOiO24HpY97ajK9VSddz9JfXekblxRfvT8UkWIcDCq1sH9t0brCqhop
-----END CERTIFICATE-----";
    }

    constructor() : AbstractServiceRestHandler("/issue-3252", new PermissiveAuthenticator()) {
        SSLCertificate cert(TestCert);
        SSLPrivateKey key(TestCert);
        hash<HttpListenerOptionInfo> info({
            "node": "0.0.0.0",
            "service": 0,
            "cert": cert,
            "key": key,
            "get_remote_certs": True,
        });
        addListener(info);
    }

    hash<auto> get(hash<auto> cx, *hash<auto> ah) {
        return RestHandler::makeResponse(200, {"cert": cx."client-cert" ? cx."client-cert".getSignature() : NOTHING});
    }

    hash<auto> getId(hash<auto> cx, *hash<auto> ah) {
        hash<auto> call_ctx = ServiceApi::getCallContext();
        UserApi::logInfo("call ctx: %N", call_ctx);
        return RestHandler::makeResponse(200, {"id": call_ctx.cx.id});
    }

    removeRootPath(reference<string> path) {
        path =~ s/^\/*issue-3252//;
    }
}

class Issue3252 inherits QorusService {
    private {
        int port;
    }

    # desc: init
    # name: init
    init() {
        Issue3252RestHandler rh();
        bindHttp(rh);
        hash<auto> info = getServiceInfo();
        #logDebug("resources: %N", info.resources);
        port = info.resources.firstValue().info.port;
        logInfo("listening on port %d", port);
    }

    # desc: returns the port number
    # name: getPort
    int getPort() {
        return port;
    }

    # desc: returns the PEM of the cert + key
    # name: getPem
    string getPem() {
        return Issue3252RestHandler::TestCert;
    }
}
