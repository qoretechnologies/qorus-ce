# -*- mode: qore; indent-tabs-mode: nil -*-

/*
    Qorus Integration Engine(R) Community Edition

    Copyright (C) 2003 - 2023 Qore Technologies, s.r.o., all rights reserved

    LICENSE: Creative Commons Attribution-ShareAlike 4.0 International

    https://creativecommons.org/licenses/by-sa/4.0/legalcode
*/

%new-style
%enable-all-warnings
%strict-args
%require-types

class ConfFileFromTemplate {
    private {
        AbstractLogger logger;
        string fileContent;
    }

    static replaceAndFlush(AbstractLogger logger, string templateFilePath, hash<string, string> replacements,
        string destinationFilePath) {
        { # create destination directory if it doesn't exist
            Dir d();
            if (!d.chdir(dirname(destinationFilePath))) {
                d.create(0755);
            }
        }

        ConfFileFromTemplate cfg(logger, templateFilePath);
        cfg.replaceContent(replacements);
        cfg.flush(destinationFilePath);
    }

    constructor(AbstractLogger logger, string file_path) {
        self.logger = logger;
        fileContent = File::readTextFile(file_path);
    }

    replaceContent(hash<string, string> replacements) {
        replacements = {
            "auto_generated_file_disclaimer":
                "####################################################################\n"
                "# THIS FILE IS AUTOMATICALLY GENERATED, PLEASE DO NOT EDIT BY HAND #\n"
                "####################################################################\n",
        } + replacements;

        # replace
        HashIterator it(replacements);
        while (it.next()) {
            fileContent = replace(fileContent, "%" + it.getKey() + "%", it.getValue());
        }
    }

    flush(string destinationFilePath) {
        # create new  file
        File f();
        f.open2(destinationFilePath, Qore::O_CREAT | Qore::O_WRONLY | Qore::O_TRUNC);
        f.write(fileContent);
        logger.log(LoggerLevel::INFO, "wrote config file %y (%d bytes)", destinationFilePath, fileContent.size());
    }
}
